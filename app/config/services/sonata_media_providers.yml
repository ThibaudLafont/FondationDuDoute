# Sonata Media providers
services:
    sonata.media.provider.custom.image:
        class: Application\Sonata\MediaBundle\Provider\CustomImageProvider
        arguments:
            $name: 'sonata.media.provider.custom.image'
            $filesystem: '@sonata.media.filesystem.local'
            $cdn: '@sonata.media.cdn.server'
            $pathGenerator: '@sonata.media.generator.default'
            $thumbnail: '@sonata.media.thumbnail.format'
            $allowedExtensions: ['jpg', 'png']
            $allowedMimeTypes: ['image/jpeg', 'image/png']
            $adapter: '@sonata.media.adapter.image.gd'
        tags:
            - { name: sonata.media.provider }
        calls:
            - method: setTemplates
              arguments: [{helper_thumbnail:'sonata/providers/thumbnail.html.twig', helper_view:'sonata/providers/view_image.html.twig'}]
            - method: setResizer
              arguments:
                  - '@sonata.media.resizer.simple'

    sonata.media.provider.audio:
        class: Application\Sonata\MediaBundle\Provider\AudioProvider
        arguments:
            $name: 'sonata.media.provider.audio'
            $filesystem: '@sonata.media.filesystem.local'
            $cdn: '@sonata.media.cdn.server'
            $pathGenerator: '@sonata.media.generator.default'
            $thumbnail: '@sonata.media.thumbnail.format'
            $allowedExtensions: ['mp3', 'wav']
            $allowedMimeTypes: ['audio/mpeg', 'audio/x-wav']
        tags:
            - { name: sonata.media.provider }
        calls:
            - method: setTemplates
              arguments: [{helper_thumbnail:'sonata/providers/thumbnail.html.twig', helper_view:'sonata/providers/view_file.html.twig'}]
            - method: setResizer
              arguments:
                  - '@sonata.media.resizer.simple'

    sonata.media.provider.custom.youtube:
        class: Application\Sonata\MediaBundle\Provider\CustomYoutubeProvider
        arguments:
            $name: 'sonata.media.provider.custom.youtube'
            $filesystem: '@sonata.media.filesystem.local'
            $cdn: '@sonata.media.cdn.server'
            $pathGenerator: '@sonata.media.generator.default'
            $thumbnail: '@sonata.media.thumbnail.format'
            $browser: '@sonata.media.buzz.browser'
            $metadata: '@sonata.media.metadata.proxy'
        tags:
            - { name: sonata.media.provider }
        calls:
            - method: setTemplates
              arguments: [{helper_thumbnail:'sonata/providers/thumbnail.html.twig', helper_view:'sonata/providers/view_youtube.html.twig'}]
            - method: setResizer
              arguments:
                  - '@sonata.media.resizer.simple'

    sonata.media.provider.custom.dailymotion:
        class: Application\Sonata\MediaBundle\Provider\CustomDailymotionProvider
        arguments:
            $name: 'sonata.media.provider.custom.dailymotion'
            $filesystem: '@sonata.media.filesystem.local'
            $cdn: '@sonata.media.cdn.server'
            $pathGenerator: '@sonata.media.generator.default'
            $thumbnail: '@sonata.media.thumbnail.format'
            $browser: '@sonata.media.buzz.browser'
            $metadata: '@sonata.media.metadata.proxy'
        tags:
            - { name: sonata.media.provider }
        calls:
            - method: setTemplates
              arguments: [{helper_thumbnail:'sonata/providers/thumbnail.html.twig', helper_view:'sonata/providers/view_dailymotion.html.twig'}]
            - method: setResizer
              arguments:
                  - '@sonata.media.resizer.simple'

    sonata.media.provider.custom.vimeo:
        class: Application\Sonata\MediaBundle\Provider\CustomVimeoProvider
        arguments:
            $name: 'sonata.media.provider.custom.vimeo'
            $filesystem: '@sonata.media.filesystem.local'
            $cdn: '@sonata.media.cdn.server'
            $pathGenerator: '@sonata.media.generator.default'
            $thumbnail: '@sonata.media.thumbnail.format'
            $browser: '@sonata.media.buzz.browser'
            $metadata: '@sonata.media.metadata.proxy'
        tags:
            - { name: sonata.media.provider }
        calls:
            - method: setTemplates
              arguments: [{helper_thumbnail:'sonata/providers/thumbnail.html.twig', helper_view:'sonata/providers/view_vimeo.html.twig'}]
            - method: setResizer
              arguments:
                  - '@sonata.media.resizer.simple'
